* Knit
** Targets help
Targets are specified in a _knit.coffee file as:

exports.targets =
  'result.js': ['./index', 'coffee']
  'app.css': ['./mystyles.less', 'less']
  'more/': ['./other', 'knit']
  'robots.txt': ['Disallow: *', 'string']
  'favicon.ico': ['./resources/favicon.ico', 'file']

In the above the more/ folder would need to have a _knit.coffee file
in it.

*** Coffee compilation
'coffee' sources specify the main module to require on (after)
loading. Note however, that currently all modules found in the folder
are compiled even if they are not dependencies of the main module.

This is important if we want to run some action only after the require
function has been provided by the stitched scripts. For example:

1. Load jQuery from CDN
2. Load stiched scripts
3. Use require inside jQuery(function () {})

Would usually result in an error, because the stiched scripts have not
had time to execute to provide 'require'. Thus, the require usage
should be written such that it is run from the stiched scripts when
it has provided the require function.
** Config help
Config is specified in a _knit.coffee file as:

exports.config =
  coffee:
    libs: []
  less:
    compress: false
** TODO Rename builder to writer
** TODO Write documentation
** TODO Catch compile errors so restart isn't required
** TODO Allow custom mime types (for string/file in particular)
** TODO Make Stitch module resolve dependencies using detective
Only include those modules that the selected main source file actually
depends on. (Dependency does something like this).
** TODO Allow specifying non-standard handlers in config?
